plot_file2 <- gsub(".txt", ".pdf", batch_corrected_file)
dir.create(paste0(final_dir, "/", "PCA-plot/"), showWarnings = FALSE)
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
# creating the proportion plot in 3 ways for both the cases
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
proportion_files
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
proportion_files
lapply(proportion_files, create_subtype_prop_plot)
lapply(proportion_files, produce_pie_chart)
# piechart
produce_pie_chart <- function(barplot_file){
data_table <- read.table(barplot_file, sep="\t", header=TRUE)
colnames(data_table) <- c("samples", "organs","membership")
data_table$membership <- gsub("\\.score", "",data_table$membership)
data_table$membership <- gsub("\\.", "\\-",data_table$membership)
# getting the color information for each subtypes
my_col <- create_subtype_col()
# matching the color information with the 6 subtypes and assigning colours accordingly
m1 <- match(unique(df$membership), my_col[,1])
w1 <- which(!is.na(m1))
sub.col <- my_col[m1[w1],2]
counts <- table(data_table$membership, data_table$organs)
counts_prop <- prop.table(counts, margin = 2)*100
df.1 <-round (counts_prop , digits = 2 )
df.2 <- melt(df.1)
colnames(df.2) <- c("subtypes","organs", "value")
g <- ggplot(df.2, aes(x=subtypes, y=value, fill=subtypes, label=value))+scale_fill_manual(values = sub.col)
g <- g + geom_bar(stat="identity") + facet_wrap(~ organs)+ geom_text() +labs(title="Percentage of samples in each subtypes")+ coord_polar()+scale_colour_Publication()+ theme_Publication_pie()+scale_y_continuous(breaks=NULL)
pie_file <- gsub(".txt", "piechart.pdf",barplot_file)
# now plotting a mosaic plot
ggsave(g, file=pie_file)
}
lapply(proportion_files, produce_pie_chart)
proportion_files
barplot_file <- proportion_files[1]
data_table <- read.table(barplot_file, sep="\t", header=TRUE)
colnames(data_table) <- c("samples", "organs","membership")
data_table$membership <- gsub("\\.score", "",data_table$membership)
data_table$membership <- gsub("\\.", "\\-",data_table$membership)
# getting the color information for each subtypes
my_col <- create_subtype_col()
# matching the color information with the 6 subtypes and assigning colours accordingly
m1 <- match(unique(df$membership), my_col[,1])
w1 <- which(!is.na(m1))
sub.col <- my_col[m1[w1],2]
counts <- table(data_table$membership, data_table$organs)
counts_prop <- prop.table(counts, margin = 2)*100
df.1 <-round (counts_prop , digits = 2 )
df.2 <- melt(df.1)
head(df.2)
colnames(df.2) <- c("subtypes","organs", "value")
g <- ggplot(df.2, aes(x=subtypes, y=value, fill=subtypes, label=value))+scale_fill_manual(values = sub.col)
g <- g + geom_bar(stat="identity") + facet_wrap(~ organs)+ geom_text() +labs(title="Percentage of samples in each subtypes")+ coord_polar()+scale_colour_Publication()+ theme_Publication_pie()+scale_y_continuous(breaks=NULL)
pie_file <- gsub(".txt", "piechart.pdf",barplot_file)
# now plotting a mosaic plot
ggsave(g, file=pie_file)
sub.col
my_col[m1[w1],2]
d
df
# piechart
produce_pie_chart <- function(barplot_file){
data_table <- read.table(barplot_file, sep="\t", header=TRUE)
colnames(data_table) <- c("samples", "organs","membership")
data_table$membership <- gsub("\\.score", "",data_table$membership)
data_table$membership <- gsub("\\.", "\\-",data_table$membership)
# getting the color information for each subtypes
my_col <- create_subtype_col()
# matching the color information with the 6 subtypes and assigning colours accordingly
m1 <- match(unique(data_table$membership), my_col[,1])
w1 <- which(!is.na(m1))
sub.col <- my_col[m1[w1],2]
counts <- table(data_table$membership, data_table$organs)
counts_prop <- prop.table(counts, margin = 2)*100
df.1 <-round (counts_prop , digits = 2 )
df.2 <- melt(df.1)
colnames(df.2) <- c("subtypes","organs", "value")
g <- ggplot(df.2, aes(x=subtypes, y=value, fill=subtypes, label=value))+scale_fill_manual(values = sub.col)
g <- g + geom_bar(stat="identity") + facet_wrap(~ organs)+ geom_text() +labs(title="Percentage of samples in each subtypes")+ coord_polar()+scale_colour_Publication()+ theme_Publication_pie()+scale_y_continuous(breaks=NULL)
pie_file <- gsub(".txt", "piechart.pdf",barplot_file)
# now plotting a mosaic plot
ggsave(g, file=pie_file)
}
lapply(proportion_files, produce_pie_chart)
dir.create(paste0(final_dir,"/", "proportion_plots/"), showWarnings = FALSE)
id <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), pattern=".pdf", full.names = TRUE)
fd <- gsub(".+\\/",paste0(final_dir,"/","proportion_plots/"), id)
file.rename(id, fd)
rm(list =ls())
options(stringsAsFactors=F)
source("/Users/ppoudel/Dropbox (ICR)//ppoudel/Scripts/Multiorgan_Rcodes/R-Package/MOTfigures/R/MOT-5-paper-source-plot-functions.r")
# loading the library
require(heatmap.plus)
require(RColorBrewer)
require(ggplot2)
require(reshape2)
require(matrixStats)
plot_mot_assigner_part1 <- function(work_dir, final_dir){
# Keeing the consistent color data
sub.col <- c( "#fdbb84", "#e34a33", "#67000d", "#08519c", "#addd8e", "#df65b0")
final_dir <- paste0(final_dir, "/",basename(work_dir),"-plots" )
# creating the final directory if it doesnot exist
dir.create(final_dir, showWarnings = FALSE)
# create the PCA plot before the batch correction
sample_info_file <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/SAMPLE_INFO/"), pattern=".txt",recursive=TRUE, full.names=TRUE)
sample_info <- do.call("rbind", lapply(sample_info_file, read.table, header=TRUE, sep="\t"))
# batch corrected file
batch_corrected_file <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/BATCH_CORRECTION/"), pattern="rowMed.txt", full.names=TRUE)
batch_corrected_data <- read.delim2(batch_corrected_file, sep="\t", header=TRUE)
plot_file1 <- gsub("_sd.+", "before_SD_selection.pdf", batch_corrected_file)
plot_file2 <- gsub(".txt", ".pdf", batch_corrected_file)
dir.create(paste0(final_dir, "/", "PCA-plot/"), showWarnings = FALSE)
plot_file2 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file2)
plot_file1 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file1)
file_to_merge <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/RMA//"), pattern="sd0.txt", full.names=TRUE)
# merge the SD 0 files to check the batch corrections
merged_data <- merge_file(file_list=file_to_merge)
# create the PCA plot after the batch correction
#makePcaPlot_organ(x=merged_data, sample_info=sample_info, title = "Before SD selection", plot_file=plot_file1)
# create the PCA plot after the batch correction
#makePcaPlot_organ(x=batch_corrected_data, sample_info=sample_info, title = "After SD selection and Combat", plot_file=plot_file2)
# creating the annotation files for all samples and silhoutte selected samples at k=4 and k=6
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
# creating the proportion plot in 3 ways for both the cases
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
# creating different types of plots
lapply(proportion_files, create_subtype_prop_plot)
#lapply(proportion_files, mosaic_plot, sub.col)
lapply(proportion_files, produce_pie_chart)
# the proprtion plots
dir.create(paste0(final_dir,"/", "proportion_plots/"), showWarnings = FALSE)
id <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), pattern=".pdf", full.names = TRUE)
fd <- gsub(".+\\/",paste0(final_dir,"/","proportion_plots/"), id)
file.rename(id, fd)
# creating the text file for the heat map
pam_centroid_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/PAM/K6/"), recursive = TRUE, pattern="threshold", full.names = TRUE)
anno_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern="annotation.k.6.txt", full.names = TRUE)
pam_centroid_file_silhoutte <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/SILHOUTTE/K6/"), pattern="threshold", full.names = TRUE)[1]
# pam_normal <-
# create the heat map
dir.create(paste0(final_dir,"/", "all_sample_heatmap/"), showWarnings = FALSE)
plot_dir1 <- paste0(final_dir,"/", "all_sample_heatmap/")
annotation_k <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_all, annotation_file=anno_file_all[1], local.colors=sub.col,plot_dir=plot_dir1 )
dir.create(paste0(final_dir,"/", "silhoutte_sample_heatmap/"), showWarnings = FALSE)
plot_dir2 <- paste0(final_dir,"/", "silhoutte_sample_heatmap/")
annotation_k2 <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_silhoutte, annotation_file=anno_file_all[2], local.colors=sub.col,plot_dir=plot_dir2)
# creating the heatmap for markers
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[1], subtype_palette=sub.col,plot_dir=plot_dir1)
#debugging
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[2], subtype_palette=sub.col,plot_dir=plot_dir2)
# comparing 3 and 4
b1<-table(annotation_k[,2],annotation_k[,4]);
apval <- hypergeometric_test(b1)
dir.create(paste0(final_dir,"/", "silhoutte_sample_k4vsk6/"), showWarnings = FALSE)
dir.create(paste0(final_dir,"/", "all_sample_k4vsk6/"), showWarnings = FALSE)
plot_dir1.1 <- paste0(final_dir,"/", "all_sample_k4vsk6/")
plot_dir2.1 <- paste0(final_dir,"/", "silhoutte_sample_k4vsk6/")
f11=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.txt")
write.table(apval,f11,quote=FALSE,sep="\t")
### Heatmap for the enrichment analysis
f12=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.pdf")
produce_heatmap(apval, f12)
# comparing 4 and 6 for silhoutt width
b2<-table(annotation_k2[,2],annotation_k2[,4]);
apval1 <- hypergeometric_test(b2)
f21=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.txt")
write.table(apval,f21,quote=FALSE,sep="\t")
f22=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.pdf")
produce_heatmap(apval, f22)
}
work_dir <- "/Users/ppoudel/Dropbox (ICR)/ppoudel/Analysis/Internal/Collection/MOT-5/PANCAN-8//PANCAN8-Estimate0.7//PANCAN8-ASSIGNER-SD1.3/"
final_dir <- "/Users/ppoudel/test//"
plot_mot_assigner_part1(work_dir = work_dir, final_dir=final_dir)
work_dir
plot_mot_assigner_part1 <- function(work_dir, final_dir){
# Keeing the consistent color data
sub.col <- c( "#fdbb84", "#e34a33", "#67000d", "#08519c", "#addd8e", "#df65b0")
final_dir <- paste0(final_dir, "/",basename(work_dir),"-plots" )
# creating the final directory if it doesnot exist
dir.create(final_dir, showWarnings = FALSE)
# create the PCA plot before the batch correction
sample_info_file <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/SAMPLE_INFO/"), pattern=".txt",recursive=TRUE, full.names=TRUE)
sample_info <- do.call("rbind", lapply(sample_info_file, read.table, header=TRUE, sep="\t"))
# batch corrected file
batch_corrected_file <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/BATCH_CORRECTION/"), pattern="rowMed.txt", full.names=TRUE)
batch_corrected_data <- read.delim2(batch_corrected_file, sep="\t", header=TRUE)
plot_file1 <- gsub("_sd.+", "before_SD_selection.pdf", batch_corrected_file)
plot_file2 <- gsub(".txt", ".pdf", batch_corrected_file)
dir.create(paste0(final_dir, "/", "PCA-plot/"), showWarnings = FALSE)
plot_file2 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file2)
plot_file1 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file1)
file_to_merge <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/RMA//"), pattern="sd0.txt", full.names=TRUE)
# merge the SD 0 files to check the batch corrections
merged_data <- merge_file(file_list=file_to_merge)
# create the PCA plot after the batch correction
#makePcaPlot_organ(x=merged_data, sample_info=sample_info, title = "Before SD selection", plot_file=plot_file1)
# create the PCA plot after the batch correction
#makePcaPlot_organ(x=batch_corrected_data, sample_info=sample_info, title = "After SD selection and Combat", plot_file=plot_file2)
# creating the annotation files for all samples and silhoutte selected samples at k=4 and k=6
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
# creating the proportion plot in 3 ways for both the cases
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
# creating different types of plots
lapply(proportion_files, create_subtype_prop_plot)
#lapply(proportion_files, mosaic_plot, sub.col)
lapply(proportion_files, produce_pie_chart)
# the proprtion plots
dir.create(paste0(final_dir,"/", "proportion_plots/"), showWarnings = FALSE)
id <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), pattern=".pdf", full.names = TRUE)
fd <- gsub(".+\\/",paste0(final_dir,"/","proportion_plots/"), id)
file.rename(id, fd)
# creating the text file for the heat map
pam_centroid_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/PAM/K6/"), recursive = TRUE, pattern="threshold", full.names = TRUE)
anno_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern="annotation.k.6.txt", full.names = TRUE)
pam_centroid_file_silhoutte <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/SILHOUTTE/K6/"), pattern="threshold", full.names = TRUE)[1]
# pam_normal <-
# create the heat map
dir.create(paste0(final_dir,"/", "all_sample_heatmap/"), showWarnings = FALSE)
plot_dir1 <- paste0(final_dir,"/", "all_sample_heatmap/")
annotation_k <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_all, annotation_file=anno_file_all[1], local.colors=sub.col,plot_dir=plot_dir1 )
dir.create(paste0(final_dir,"/", "silhoutte_sample_heatmap/"), showWarnings = FALSE)
plot_dir2 <- paste0(final_dir,"/", "silhoutte_sample_heatmap/")
annotation_k2 <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_silhoutte, annotation_file=anno_file_all[2], local.colors=sub.col,plot_dir=plot_dir2)
# creating the heatmap for markers
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[1], subtype_palette=sub.col,plot_dir=plot_dir1)
#debugging
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[2], subtype_palette=sub.col,plot_dir=plot_dir2)
# comparing 3 and 4
b1<-table(annotation_k[,2],annotation_k[,4]);
apval <- hypergeometric_test(b1)
dir.create(paste0(final_dir,"/", "silhoutte_sample_k4vsk6/"), showWarnings = FALSE)
dir.create(paste0(final_dir,"/", "all_sample_k4vsk6/"), showWarnings = FALSE)
plot_dir1.1 <- paste0(final_dir,"/", "all_sample_k4vsk6/")
plot_dir2.1 <- paste0(final_dir,"/", "silhoutte_sample_k4vsk6/")
f11=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.txt")
write.table(apval,f11,quote=FALSE,sep="\t")
### Heatmap for the enrichment analysis
f12=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.pdf")
produce_heatmap(apval, f12)
# comparing 4 and 6 for silhoutt width
b2<-table(annotation_k2[,2],annotation_k2[,4]);
apval1 <- hypergeometric_test(b2)
f21=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.txt")
write.table(apval,f21,quote=FALSE,sep="\t")
f22=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.pdf")
produce_heatmap(apval, f22)
}
work_dir <- "/Users/ppoudel/Dropbox (ICR)/ppoudel/Analysis/Internal/Collection/MOT-5/PANCAN-8//PANCAN8-Estimate0.7//PANCAN8-ASSIGNER-SD1.3/"
final_dir <- "/Users/ppoudel/test//"
plot_mot_assigner_part1(work_dir = work_dir, final_dir=final_dir)
sub.col <- c( "#fdbb84", "#e34a33", "#67000d", "#08519c", "#addd8e", "#df65b0")
final_dir <- paste0(final_dir, "/",basename(work_dir),"-plots" )
# creating the final directory if it doesnot exist
dir.create(final_dir, showWarnings = FALSE)
# create the PCA plot before the batch correction
sample_info_file <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/SAMPLE_INFO/"), pattern=".txt",recursive=TRUE, full.names=TRUE)
sample_info <- do.call("rbind", lapply(sample_info_file, read.table, header=TRUE, sep="\t"))
# batch corrected file
batch_corrected_file <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/BATCH_CORRECTION/"), pattern="rowMed.txt", full.names=TRUE)
batch_corrected_data <- read.delim2(batch_corrected_file, sep="\t", header=TRUE)
plot_file1 <- gsub("_sd.+", "before_SD_selection.pdf", batch_corrected_file)
plot_file2 <- gsub(".txt", ".pdf", batch_corrected_file)
dir.create(paste0(final_dir, "/", "PCA-plot/"), showWarnings = FALSE)
plot_file2 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file2)
plot_file1 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file1)
file_to_merge <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/RMA//"), pattern="sd0.txt", full.names=TRUE)
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
# creating the proportion plot in 3 ways for both the cases
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
proportion_files
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
create_annotation_file( k=4, workdir=work_dir)
function (file, header = FALSE, sep = "", quote = "\"'", dec = ".",
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
# creating the proportion plot in 3 ways for both the cases
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
proportion_files
proportion_files[1]
k
k=4
p <- paste0("consensus.k.", k,".txt" )
nmf_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/NMF/"), pattern=p, full.names=TRUE)
ann_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/NMF/"), pattern=p, full.names=FALSE)
nmf <- read.delim2(nmf_file, sep="\t", header=TRUE)
sample_info_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/SAMPLE_INFO/"), pattern=".txt", full.names=TRUE)
sample_info <- do.call("rbind", lapply(sample_info_file, read.table, header=TRUE, sep="\t"))
# replacing the digits from the sample info files
sample_info[,2] <- gsub("\\d", "", sample_info[,2])
# merging the sample info and nmf file
annotation_dat <- merge(sample_info, nmf,by=intersect(sample_info[,1], nmf[,1]), by.x = colnames(sample_info)[1], by.y = colnames(nmf)[1])
colnames(annotation_dat) <- c("sample", "organ", "membership")
ann_file <- gsub("consensus", "annotation", ann_file)
output_file <- paste0(workdir, "/ANALYSIS/TRAINNING/ANNOTATION/",ann_file )
filename_count <- gsub("annotation.+","count", output_file)
filename_proportion <- gsub("annotation.+","percentage", output_file)
work_dir
workdir <- work_dir
p <- paste0("consensus.k.", k,".txt" )
nmf_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/NMF/"), pattern=p, full.names=TRUE)
ann_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/NMF/"), pattern=p, full.names=FALSE)
nmf <- read.delim2(nmf_file, sep="\t", header=TRUE)
sample_info_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/SAMPLE_INFO/"), pattern=".txt", full.names=TRUE)
sample_info <- do.call("rbind", lapply(sample_info_file, read.table, header=TRUE, sep="\t"))
# replacing the digits from the sample info files
sample_info[,2] <- gsub("\\d", "", sample_info[,2])
# merging the sample info and nmf file
annotation_dat <- merge(sample_info, nmf,by=intersect(sample_info[,1], nmf[,1]), by.x = colnames(sample_info)[1], by.y = colnames(nmf)[1])
colnames(annotation_dat) <- c("sample", "organ", "membership")
ann_file <- gsub("consensus", "annotation", ann_file)
output_file <- paste0(workdir, "/ANALYSIS/TRAINNING/ANNOTATION/",ann_file )
filename_count <- gsub("annotation.+","count", output_file)
filename_proportion <- gsub("annotation.+","percentage", output_file)
filename_count
source("/Users/ppoudel/Dropbox (ICR)//ppoudel/Scripts/Multiorgan_Rcodes/R-Package/MOTfigures/R/MOT-5-paper-source-plot-functions.r")
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
# creating the annotation file for silhoutte selected samples
create_annotation_file_silhoutte <- function(k, workdir){
p <- paste0("consensus.k.", k,".txt" )
p1 <- paste0("NMF_", k, "_positive_silhoutte_samples.txt")
p2 <- paste0("NMF_annotation.k.", k,".txt" )
sil_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/SILHOUTTE/"), pattern=p1, full.names=TRUE)
ann_file_f <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/ANNOTATION/"), pattern=p2, full.names=FALSE)
ann_file_f2 <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/NMF/"), pattern=p, full.names=TRUE)
ann_file <- read.delim2(ann_file_f2, sep="\t", header = TRUE)
sil_sel_samples <- read.delim2(sil_file, sep="\t", header=TRUE)
m1 <- match( ann_file[,1], colnames(sil_sel_samples))
w1 <- which(!is.na(m1))
# merging the sample info and nmf file
annotation_dat_sil <-ann_file[w1,]
sample_info_file <-list.files(path=paste0(workdir, "/ANALYSIS/TRAINNING/SAMPLE_INFO/"), pattern=".txt", full.names=TRUE)
sample_info <- do.call("rbind", lapply(sample_info_file, read.table, header=TRUE, sep="\t"))
# replacing the digits from the sample info files
sample_info[,2] <- gsub("\\d", "", sample_info[,2])
annotation_dat_s <- merge(sample_info, annotation_dat_sil,by=intersect(sample_info[,1], annotation_dat_sil[,1]), by.x = colnames(sample_info)[1], by.y = colnames(annotation_dat_sil)[1])
colnames(annotation_dat_s) <- c("sample", "organ", "membership")
ann_file <- gsub("annotation", "silhoutte_positive_samples_annotation", ann_file_f)
filename_count <- gsub("annotation.+","sil_count", ann_file)
filename_proportion <- gsub("annotation.+","sil_percentage", ann_file)
# creating the table
b1 <- table(annotation_dat_s$membership, annotation_dat_s$organ)
b2 <- round( 100*prop.table(b1, margin = 2), digits = 2)
# writing the merged_file to the directory
write.table(b1, filename_count, sep="\t")
write.table(b2, filename_proportion, sep="\t")
output_file <- paste0(workdir, "/ANALYSIS/TRAINNING/ANNOTATION/",ann_file )
# writing to the file
write.table(annotation_dat_s, output_file, sep="\t")
}
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
proportion_files
lapply(proportion_files, create_subtype_prop_plot)
lapply(proportion_files, produce_pie_chart)
dir.create(paste0(final_dir,"/", "proportion_plots/"), showWarnings = FALSE)
id <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), pattern=".pdf", full.names = TRUE)
fd <- gsub(".+\\/",paste0(final_dir,"/","proportion_plots/"), id)
file.rename(id, fd)
# creating the text file for the heat map
pam_centroid_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/PAM/K6/"), recursive = TRUE, pattern="threshold", full.names = TRUE)
anno_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern="annotation.k.6.txt", full.names = TRUE)
pam_centroid_file_silhoutte <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/SILHOUTTE/K6/"), pattern="threshold", full.names = TRUE)[1]
# pam_normal <-
# create the heat map
dir.create(paste0(final_dir,"/", "all_sample_heatmap/"), showWarnings = FALSE)
plot_dir1 <- paste0(final_dir,"/", "all_sample_heatmap/")
annotation_k <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_all, annotation_file=anno_file_all[1], local.colors=sub.col,plot_dir=plot_dir1 )
dir.create(paste0(final_dir,"/", "silhoutte_sample_heatmap/"), showWarnings = FALSE)
plot_dir2 <- paste0(final_dir,"/", "silhoutte_sample_heatmap/")
annotation_k2 <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_silhoutte, annotation_file=anno_file_all[2], local.colors=sub.col,plot_dir=plot_dir2)
# creating the heatmap for markers
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[1], subtype_palette=sub.col,plot_dir=plot_dir1)
#debugging
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[2], subtype_palette=sub.col,plot_dir=plot_dir2)
# comparing 3 and 4
b1<-table(annotation_k[,2],annotation_k[,4]);
apval <- hypergeometric_test(b1)
dir.create(paste0(final_dir,"/", "silhoutte_sample_k4vsk6/"), showWarnings = FALSE)
dir.create(paste0(final_dir,"/", "all_sample_k4vsk6/"), showWarnings = FALSE)
plot_dir1.1 <- paste0(final_dir,"/", "all_sample_k4vsk6/")
plot_dir2.1 <- paste0(final_dir,"/", "silhoutte_sample_k4vsk6/")
f11=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.txt")
write.table(apval,f11,quote=FALSE,sep="\t")
### Heatmap for the enrichment analysis
f12=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.pdf")
produce_heatmap(apval, f12)
# comparing 4 and 6 for silhoutt width
b2<-table(annotation_k2[,2],annotation_k2[,4]);
apval1 <- hypergeometric_test(b2)
f21=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.txt")
write.table(apval,f21,quote=FALSE,sep="\t")
f22=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.pdf")
produce_heatmap(apval, f22)
}
rm(list =ls())
options(stringsAsFactors=F)
source("/Users/ppoudel/Dropbox (ICR)//ppoudel/Scripts/Multiorgan_Rcodes/R-Package/MOTfigures/R/MOT-5-paper-source-plot-functions.r")
# loading the library
require(heatmap.plus)
require(RColorBrewer)
require(ggplot2)
require(reshape2)
require(matrixStats)
plot_mot_assigner_part1 <- function(work_dir, final_dir){
# Keeing the consistent color data
sub.col <- c( "#fdbb84", "#e34a33", "#67000d", "#08519c", "#addd8e", "#df65b0")
final_dir <- paste0(final_dir, "/",basename(work_dir),"-plots" )
# creating the final directory if it doesnot exist
dir.create(final_dir, showWarnings = FALSE)
# create the PCA plot before the batch correction
sample_info_file <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/SAMPLE_INFO/"), pattern=".txt",recursive=TRUE, full.names=TRUE)
sample_info <- do.call("rbind", lapply(sample_info_file, read.table, header=TRUE, sep="\t"))
# batch corrected file
batch_corrected_file <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/BATCH_CORRECTION/"), pattern="rowMed.txt", full.names=TRUE)
batch_corrected_data <- read.delim2(batch_corrected_file, sep="\t", header=TRUE)
plot_file1 <- gsub("_sd.+", "before_SD_selection.pdf", batch_corrected_file)
plot_file2 <- gsub(".txt", ".pdf", batch_corrected_file)
dir.create(paste0(final_dir, "/", "PCA-plot/"), showWarnings = FALSE)
plot_file2 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file2)
plot_file1 <- gsub(".+\\/", paste0(final_dir, "/", "PCA-plot/"), plot_file1)
file_to_merge <-list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/RMA//"), pattern="sd0.txt", full.names=TRUE)
# merge the SD 0 files to check the batch corrections
merged_data <- merge_file(file_list=file_to_merge)
# create the PCA plot after the batch correction
#makePcaPlot_organ(x=merged_data, sample_info=sample_info, title = "Before SD selection", plot_file=plot_file1)
# create the PCA plot after the batch correction
#makePcaPlot_organ(x=batch_corrected_data, sample_info=sample_info, title = "After SD selection and Combat", plot_file=plot_file2)
# creating the annotation files for all samples and silhoutte selected samples at k=4 and k=6
create_annotation_file( k=4, workdir=work_dir)
create_annotation_file( k=6, workdir=work_dir)
create_annotation_file_silhoutte(k=4, workdir = work_dir)
create_annotation_file_silhoutte(k=6, workdir = work_dir)
# creating the proportion plot in 3 ways for both the cases
proportion_files <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern=".txt", full.names = TRUE)
# creating different types of plots
lapply(proportion_files, create_subtype_prop_plot)
#lapply(proportion_files, mosaic_plot, sub.col)
lapply(proportion_files, produce_pie_chart)
# the proprtion plots
dir.create(paste0(final_dir,"/", "proportion_plots/"), showWarnings = FALSE)
id <- list.files(path=paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), pattern=".pdf", full.names = TRUE)
fd <- gsub(".+\\/",paste0(final_dir,"/","proportion_plots/"), id)
file.rename(id, fd)
# creating the text file for the heat map
pam_centroid_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/PAM/K6/"), recursive = TRUE, pattern="threshold", full.names = TRUE)
anno_file_all <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/ANNOTATION/"), recursive = TRUE, pattern="annotation.k.6.txt", full.names = TRUE)
pam_centroid_file_silhoutte <- list.files(paste0(work_dir, "/ANALYSIS/TRAINNING/SILHOUTTE/K6/"), pattern="threshold", full.names = TRUE)[1]
# pam_normal <-
# create the heat map
dir.create(paste0(final_dir,"/", "all_sample_heatmap/"), showWarnings = FALSE)
plot_dir1 <- paste0(final_dir,"/", "all_sample_heatmap/")
annotation_k <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_all, annotation_file=anno_file_all[1], local.colors=sub.col,plot_dir=plot_dir1 )
dir.create(paste0(final_dir,"/", "silhoutte_sample_heatmap/"), showWarnings = FALSE)
plot_dir2 <- paste0(final_dir,"/", "silhoutte_sample_heatmap/")
annotation_k2 <- create_heatmap3_multiorgan_training(workdir=work_dir, merged_cdt_file=batch_corrected_file, pam_centroid_file=pam_centroid_file_silhoutte, annotation_file=anno_file_all[2], local.colors=sub.col,plot_dir=plot_dir2)
# creating the heatmap for markers
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[1], subtype_palette=sub.col,plot_dir=plot_dir1)
#debugging
heatmap_multiorgan_marker(expression_file=batch_corrected_file, annotation_file=anno_file_all[2], subtype_palette=sub.col,plot_dir=plot_dir2)
# comparing 3 and 4
b1<-table(annotation_k[,2],annotation_k[,4]);
apval <- hypergeometric_test(b1)
dir.create(paste0(final_dir,"/", "silhoutte_sample_k4vsk6/"), showWarnings = FALSE)
dir.create(paste0(final_dir,"/", "all_sample_k4vsk6/"), showWarnings = FALSE)
plot_dir1.1 <- paste0(final_dir,"/", "all_sample_k4vsk6/")
plot_dir2.1 <- paste0(final_dir,"/", "silhoutte_sample_k4vsk6/")
f11=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.txt")
write.table(apval,f11,quote=FALSE,sep="\t")
### Heatmap for the enrichment analysis
f12=paste0(plot_dir1.1,"/",Sys.Date(), "_",basename(work_dir), "K4_K6_Subtypes.pdf")
produce_heatmap(apval, f12)
# comparing 4 and 6 for silhoutt width
b2<-table(annotation_k2[,2],annotation_k2[,4]);
apval1 <- hypergeometric_test(b2)
f21=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.txt")
write.table(apval,f21,quote=FALSE,sep="\t")
f22=paste0(plot_dir2.1,"/",Sys.Date(), "_",basename(work_dir), "Silhoutte_Selected_Samples_K4_K6_Subtypes.pdf")
produce_heatmap(apval, f22)
}
work_dir <- "/Users/ppoudel/Dropbox (ICR)/ppoudel/Analysis/Internal/Collection/MOT-5/PANCAN-8//PANCAN8-Estimate0.7//PANCAN8-ASSIGNER-SD1.3/"
final_dir <- "/Users/ppoudel/test//"
plot_mot_assigner_part1(work_dir = work_dir, final_dir=final_dir)
# creating the venn diagram
work_dir <- "/Users/ppoudel/Dropbox (ICR)/ppoudel/Analysis/Internal/Collection/MOT-5/MOT-5/MOT-ASSIGNER-SD0.8//"
final_dir <- "/Users/ppoudel/test//"
plot_mot_assigner_part1(work_dir = work_dir, final_dir=final_dir)
